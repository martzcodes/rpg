{"version":3,"sources":["components/MadeWithLove.tsx","actions/index.ts","services/discord.ts","containers/AddRoll.tsx","components/Roll.tsx","components/RollList.tsx","containers/VisibleRollList.tsx","components/DiscordKeyForm.tsx","containers/DiscordKey.tsx","landing/Landing.tsx","settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx","reducers/rolls.ts","reducers/discord.ts","reducers/index.ts","services/localStorage.ts"],"names":["MadeWithLove","react_default","a","createElement","Typography","variant","color","align","role","aria-label","Link","href","sendRoll","id","console","log","store","getState","discord","rollInd","rolls","findIndex","roll","apiKey","msg","concat","description","result","Dice","renderedExpression","total","username","message","payload","JSON","stringify","content","params","headers","Content-Type","method","body","fetch","sendToDiscord","character","type","useStyles","makeStyles","theme","createStyles","container","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","card","connect","_ref","dispatch","classes","_React$useState","React","useState","name","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","value","className","noValidate","autoComplete","onSubmit","e","preventDefault","trim","Card","CardContent","TextField","label","onChange","margin","CardActions","Button","size","Roll","onClick","onRemove","ListItem","button","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Delete_default","RollList","removeRoll","List","map","components_Roll","assign","key","state","DiscordKeyForm","onSave","setDiscord","Landing","clsx","paper","fixedHeight","Container","maxWidth","Grid","item","xs","DiscordKey","containers_AddRoll","Paper","VisibleRollList","Settings","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","height","overflow","paddingTop","paddingBottom","flexDirection","App","open","setOpen","CssBaseline","AppBar","Toolbar","Menu_default","component","noWrap","Drawer","ChevronLeft_default","Divider","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","match","arguments","length","undefined","action","toConsumableArray","Math","max","apply","val","newState","splice","combineReducers","persistedState","serializedState","localStorage","getItem","parse","err","loadState","createStore","rootReducer","subscribe","throttle","setItem","_unused","saveState","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sZAIe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,cACDN,EAAAC,EAAAC,cAAA,QAAMK,KAAK,MAAMC,aAAW,QAA5B,gBAGC,KACDR,EAAAC,EAAAC,cAAA,QAAMK,KAAK,MAAMC,aAAW,UAA5B,UAGC,SACDR,EAAAC,EAAAC,cAAA,QAAMK,KAAK,MAAMC,aAAW,QAA5B,gBAGC,OACDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMJ,MAAM,UAAUK,KAAK,uCAA3B,cAGC,4CCDMC,EAAW,SAACC,GACvBC,QAAQC,IAAIC,GAAMC,YAClB,IAAMC,EAAeF,GAAMC,WAAWC,QAChCC,EAAWH,GAAMC,WAAWG,MAAcC,UAC9C,SAACC,GAAD,OAAeA,EAAKT,KAAOA,IAE7B,GAAIK,EAAQK,SAAuB,IAAbJ,EAAgB,CACpC,IAAMG,EAAaN,GAAMC,WAAWG,MAAcD,GAC9CK,EAAG,GAAAC,OAAMH,EAAKI,aAClB,GAAIJ,EAAKA,KAAM,CACb,IACMK,GADO,IAAIC,QACGN,KAAKA,EAAKA,MAC9BE,EAAG,GAAAC,OAAMH,EAAKI,YAAX,MAAAD,OAA2BE,EAAOE,mBAAlC,OAAAJ,OACDE,EAAOG,QCnCc,SAC3BP,EACAQ,EACAC,GAEA,IAAMC,EAAUC,KAAKC,UAAU,CAC7BC,QAASJ,EACTD,SAAUA,IAENM,EAAS,CACbC,QAAS,CACPC,eAAgB,oBAElBC,OAAQ,OACRC,KAAMR,GAERnB,QAAQC,IAAIkB,GACZS,MAAMnB,EAAQc,GDqBZM,CAAczB,EAAQK,OAAQD,EAAKsB,UAAWpB,GAEhD,MAAO,CACLqB,KAAM,YACNhC,6DE5BEiC,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,UAAW,GAIXC,UAAW,CACTC,WAAYJ,EAAMK,QAAQ,GAC1BC,YAAaN,EAAMK,QAAQ,GAC3BE,MAAO,KAET7B,YAAa,CACX0B,WAAYJ,EAAMK,QAAQ,GAC1BC,YAAaN,EAAMK,QAAQ,GAC3BE,MAAO,QAETC,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJH,MAAO,KAETI,KAAM,OAiGKC,gBApFC,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,SACXC,EAAUjB,IADqBkB,EAETC,IAAMC,SAAgB,CAChDC,KAAM,GACNvB,UAAW,GACXlB,YAAa,GACbJ,KAAM,KAN6B8C,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAE9BO,EAF8BH,EAAA,GAEtBI,EAFsBJ,EAAA,GAS/BK,EAAe,SAACN,GAAD,OAAuB,SAC1CO,GAEA5D,QAAQC,IAAIoD,GACZK,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAANF,OAAAO,EAAA,EAAAP,CAAA,GAAeF,EAAOO,EAAMG,OAAOC,WAmB9C,OACE7E,EAAAC,EAAAC,cAAA,QACE4E,UAAWhB,EAAQb,UACnB8B,YAAU,EACVC,aAAa,MACbC,SArBa,SAACC,GF7DG,IAAAtB,EE8DnBsB,EAAEC,iBACGb,EAAOJ,KAAKkB,SAGjBvB,EFxDG,CACLjB,KAAM,WACNsB,MAZqBN,EEmET,CACNM,KAAMI,EAAOJ,KAAKkB,OAClB/D,KAAMiD,EAAOjD,KAAK+D,OAClBzC,UAAW2B,EAAO3B,UAAUyC,OAC5B3D,YAAa6C,EAAO7C,YAAY2D,SFtEtClB,KAYA7C,KAbqBuC,EAErBvC,KAYAsB,UAdqBiB,EAGrBjB,UAYAlB,YAfqBmC,EAIrBnC,cEsEE8C,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAAN,CAAcJ,KAAM,GAAIzC,YAAa,GAAIJ,KAAM,SAUtDrB,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMP,UAAWhB,EAAQJ,MACvB1D,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3E,GAAG,OACH4E,MAAM,OACNV,UAAWhB,EAAQZ,UACnB2B,MAAOP,EAAOJ,KACduB,SAAUjB,EAAa,QACvBkB,OAAO,WAET1F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3E,GAAG,YACH4E,MAAM,YACNV,UAAWhB,EAAQZ,UACnB2B,MAAOP,EAAO3B,UACd8C,SAAUjB,EAAa,aACvBkB,OAAO,WAET1F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3E,GAAG,OACH4E,MAAM,OACNV,UAAWhB,EAAQZ,UACnB2B,MAAOP,EAAOjD,KACdoE,SAAUjB,EAAa,QACvBkB,OAAO,WAET1F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3E,GAAG,cACH4E,MAAM,cACNV,UAAWhB,EAAQrC,YACnBoD,MAAOP,EAAO7C,YACdgE,SAAUjB,EAAa,eACvBkB,OAAO,YAGX1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAQC,KAAK,QAAQxF,MAAM,UAAUuC,KAAK,UAA1C,8DCjFKkD,EA9BF,SAAAlC,GAAA,IACXmC,EADWnC,EACXmC,QACA7B,EAFWN,EAEXM,KACA7C,EAHWuC,EAGXvC,KACAsB,EAJWiB,EAIXjB,UACAlB,EALWmC,EAKXnC,YACAuE,EANWpC,EAMXoC,SANW,OAQXhG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAUC,QAAM,EAACH,QAASA,GACxB/F,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEC,QAAO,GAAA5E,OAAK0C,EAAL,MAAA1C,OAAcH,GACrBgF,UAAS,GAAA7E,OAAKmB,EAAL,MAAAnB,OAAmBC,KAE9BzB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAYC,KAAK,MAAMhG,aAAW,SAASuF,QAASC,GAClDhG,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,mBCOOyG,EA9BE,SAAA9C,GAA0C,IAAvCzC,EAAuCyC,EAAvCzC,MAAOR,EAAgCiD,EAAhCjD,SAAUgG,EAAsB/C,EAAtB+C,WAEnC,OADA9F,QAAQC,IAAIK,GAEVnB,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACGzF,EAAM0F,IAAI,SAACxF,GAAD,OACTrB,EAAAC,EAAAC,cAAC4G,EAAD1C,OAAA2C,OAAA,CACEC,IAAK3F,EAAKT,IACNS,EAFN,CAGE0E,QAAS,kBAAMpF,EAASU,EAAKT,KAC7BoF,SAAU,kBAAMW,EAAWtF,EAAKT,YCG3B+C,cATS,SAACsD,GAAD,MAAiB,CACvC9F,OALuBA,EAKA8F,EAAM9F,MAJtBA,IADe,IAACA,GAQE,SAAC0C,GAAD,MAAoB,CAC7ClD,SAAU,SAACC,GAAD,OAAaiD,EAASlD,EAASC,KACzC+F,WAAY,SAAC/F,GAAD,OAAaiD,ELgCD,SAACjD,GAAD,MAAiB,CACzCgC,KAAM,cACNhC,MKlCkC+F,CAAW/F,OAGhC+C,CAGb+C,GCEI7D,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,UAAW,GAIXC,UAAW,CACTC,WAAYJ,EAAMK,QAAQ,GAC1BC,YAAaN,EAAMK,QAAQ,GAC3BE,MAAO,QAETC,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJH,MAAO,KAETI,KAAM,OA2DKwD,EAjDQ,SAAAtD,GAA6B,IAM5BM,EANEiD,EAA0BvD,EAA1BuD,OAAQ7F,EAAkBsC,EAAlBtC,OAC1BwC,EAAUjB,IADkCkB,EAEtBC,IAAMC,SAAgB,CAChD3C,OAAQA,IAHwC6C,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAE3CO,EAF2CH,EAAA,GAEnCI,EAFmCJ,EAAA,GAalD,OACEnE,EAAAC,EAAAC,cAAA,QACE4E,UAAWhB,EAAQb,UACnB8B,YAAU,EACVC,aAAa,MACbC,SAAU,SAAAC,GACRA,EAAEC,iBACFgC,EAAO7C,EAAOhD,UAGhBtB,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMP,UAAWhB,EAAQJ,MACvB1D,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACE3E,GAAG,SACH4E,MAAM,UACNV,UAAWhB,EAAQZ,UACnB2B,MAAOP,EAAOhD,OACdmE,UAxBYvB,EAwBW,SAxBW,SAC1CO,GAEA5D,QAAQC,IAAIoD,GACZK,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAANF,OAAAO,EAAA,EAAAP,CAAA,GAAeF,EAAOO,EAAMG,OAAOC,WAqBpCa,OAAO,YAGX1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAQC,KAAK,QAAQxF,MAAM,UAAUuC,KAAK,UAA1C,YCtEKe,cAVS,SAACsD,GACvB,MAAO,CACL3F,OAAQ2F,EAAMhG,QAAQK,OAAS2F,EAAMhG,QAAQK,OAAS,KAI/B,SAACuC,GAAD,MAAoB,CAC7CsD,OAAQ,SAAC7F,GAAD,OAAiBuC,EPwCD,SAACvC,GAAD,MAAqB,CAC7CsB,KAAM,cACNtB,UO1CkC8F,CAAW9F,OAGhCqC,CAGbuD,GCPIrE,EAAYC,YAAW,SAAAC,GAAK,MAAK,KAExB,SAASsE,KACtB,IAAMvD,EAAejB,IACIyE,YAAKxD,EAAQyD,MAAOzD,EAAQ0D,aAErD,OACExH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAWC,SAAS,KAAK5C,UAAWhB,EAAQb,WAC1CjD,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAM1E,WAAS,EAACG,QAAS,GACvBpD,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb7H,EAAAC,EAAAC,cAAC4H,EAAD,OAEF9H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb7H,EAAAC,EAAAC,cAAC6H,EAAD,OAEF/H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb7H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOlD,UAAWhB,EAAQyD,OACxBvH,EAAAC,EAAAC,cAAC+H,EAAD,UCpBZ,IAAMpF,GAAYC,YAAW,SAAAC,GAAK,MAAK,KAExB,SAASmF,KACtB,IAAMpE,EAAejB,KAGrB,OACE7C,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAWC,SAAS,KAAK5C,UAAWhB,EAAQb,WAC1CjD,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAM1E,WAAS,EAACG,QAAS,GACvBpD,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb7H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOlD,UAAWhB,EAAQyD,WCEpC,IAEM1E,GAAYC,YAChB,SAAAC,GAAK,MACF,CACCoF,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAYnE,OAAAM,EAAA,EAAAN,CAAA,CACVgE,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACN3F,EAAM4F,OAAON,SAElBO,OAAQ,CACNC,OAAQ9F,EAAM8F,OAAOC,OAAS,EAC9BC,WAAYhG,EAAMiG,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQnG,EAAMiG,YAAYE,OAAOC,MACjCC,SAAUrG,EAAMiG,YAAYI,SAASC,iBAGzCC,YAAa,CACXnG,WA1BY,IA2BZG,MAAK,eAAA9B,OA3BO,IA2BP,OACLuH,WAAYhG,EAAMiG,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQnG,EAAMiG,YAAYE,OAAOC,MACjCC,SAAUrG,EAAMiG,YAAYI,SAASG,kBAGzCC,WAAY,CACVnG,YAAa,IAEfoG,iBAAkB,CAChBrB,QAAS,QAEXsB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZxG,MA7CY,IA8CZyF,WAAYhG,EAAMiG,YAAYC,OAAO,QAAS,CAC5CC,OAAQnG,EAAMiG,YAAYE,OAAOC,MACjCC,SAAUrG,EAAMiG,YAAYI,SAASG,kBAGzCQ,iBAAiB3F,OAAAO,EAAA,EAAAP,CAAA,CACf4F,UAAW,SACXjB,WAAYhG,EAAMiG,YAAYC,OAAO,QAAS,CAC5CC,OAAQnG,EAAMiG,YAAYE,OAAOC,MACjCC,SAAUrG,EAAMiG,YAAYI,SAASC,gBAEvC/F,MAAOP,EAAMK,QAAQ,IACpBL,EAAMkH,YAAYC,GAAG,MAAQ,CAC5B5G,MAAOP,EAAMK,QAAQ,KAGzB+G,aAAcpH,EAAM4F,OAAON,QAC3BlG,QAAS,CACPwH,SAAU,EACVS,OAAQ,QACRC,SAAU,QAEZpH,UAAW,CACTqH,WAAYvH,EAAMK,QAAQ,GAC1BmH,cAAexH,EAAMK,QAAQ,IAE/BmE,MAAO,CACLmB,QAAS3F,EAAMK,QAAQ,GACvBgF,QAAS,OACTiC,SAAU,OACVG,cAAe,UAEjBhD,YAAa,CACX4C,OAAQ,QA+EDK,GA1EO,WACpB,IAAM3G,EAAejB,KADKkB,EAEFC,IAAMC,UAAS,GAFbE,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEnB2G,EAFmBvG,EAAA,GAEbwG,EAFaxG,EAAA,GAU1B,OACEnE,EAAAC,EAAAC,cAAA,OAAK4E,UAAWhB,EAAQqE,MACtBnI,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEhB,SAAS,WACT/E,UAAWwC,YAAKxD,EAAQ8E,OAAQ8B,GAAQ5G,EAAQwF,cAEhDtJ,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAShG,UAAWhB,EAAQuE,SAC1BrI,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACEC,KAAK,QACLnG,MAAM,UACNG,aAAW,cACXuF,QAnBe,WACvB4E,GAAQ,IAmBA7F,UAAWwC,YACTxD,EAAQ0F,WACRkB,GAAQ5G,EAAQ2F,mBAGlBzJ,EAAAC,EAAAC,cAAC6K,EAAA9K,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,UAAU,KACV5K,QAAQ,KACRC,MAAM,UACN4K,QAAM,EACNnG,UAAWhB,EAAQ4F,OALrB,uBAWJ1J,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CACE9K,QAAQ,YACR0D,QAAS,CACPyD,MAAOD,YAAKxD,EAAQ8F,aAAcc,GAAQ5G,EAAQiG,mBAEpDW,KAAMA,GAEN1K,EAAAC,EAAAC,cAAA,OAAK4E,UAAWhB,EAAQyE,aACtBvI,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAYR,QA3CM,WACxB4E,GAAQ,KA2CA3K,EAAAC,EAAAC,cAACiL,EAAAlL,EAAD,QAGJD,EAAAC,EAAAC,cAACkL,EAAA,EAAD,OAGFpL,EAAAC,EAAAC,cAAA,QAAM4E,UAAWhB,EAAQ3B,SACvBnC,EAAAC,EAAAC,cAAA,OAAK4E,UAAWhB,EAAQqG,eACxBnK,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAWC,SAAS,KAAK5C,UAAWhB,EAAQb,WAC1CjD,EAAAC,EAAAC,cAACmL,EAAA,EAAD,KACErL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,KACEtL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIR,UAAW3D,KACjCrH,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIR,UAAW9C,SAKzClI,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACH,EAAD,SC/JY0L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCNF9K,qBC2BWI,GApCD,WAA6B,IAA5B8F,EAA4B6E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,GAAIG,EAAgBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,OAAQC,EAAOrJ,MACb,IAAK,WACH,SAAApB,OAAA4C,OAAA8H,GAAA,EAAA9H,CACK6C,GADL,CAEE,CACErG,GACmB,IAAjBqG,EAAM8E,OACF,EACAI,KAAKC,IAALC,MAAAF,KAAI/H,OAAA8H,GAAA,EAAA9H,CACC6C,EAAMJ,IAAI,SAACyF,GAEZ,OADAzL,QAAQC,IAAIwL,GACLA,EAAI1L,OAEX,EACVsD,KAAM+H,EAAO/H,KACb7C,KAAM4K,EAAO5K,KACbI,YAAawK,EAAOxK,YACpBkB,UAAWsJ,EAAOtJ,aAGxB,IAAK,YACH,OAAOsE,EAET,IAAK,cACH,IAAMsF,EAAWnI,OAAO2C,OAAO,GAAIE,GAKnC,OAJAsF,EAASC,OACPD,EAASnL,UAAU,SAACkL,GAAD,OAAcA,EAAI1L,KAAOqL,EAAOrL,KACnD,GAEK2L,EACT,QACE,OAAOtF,ICxBEhG,GAXC,WAA6B,IAA5BgG,EAA4B6E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,GAAIG,EAAgBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOrJ,MACb,IAAK,cACH,MAAO,CACLtB,OAAQ2K,EAAO3K,QAEnB,QACE,OAAO2F,ICHEwF,gBAAgB,CAC7BtL,MAAOA,GACPF,uBHKIyL,GIXmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAO1K,KAAK6K,MAAMH,GAClB,MAAOI,GACP,QJGmBC,IAGrBjM,GADE2L,GACMO,aAAYC,GAAaR,IAEzBO,aAAYC,KAGhBC,UACJC,oBAAS,YIRc,SAACnG,GACxB,IACE,IAAM0F,EAAkB1K,KAAKC,UAAU+E,GACvC2F,aAAaS,QAAQ,QAASV,GAC9B,MAAAW,KJKAC,CAAUnJ,OAAAM,EAAA,EAAAN,CAAA,GACLrD,GAAMC,cAEV,MAGLwM,IAASC,OACPzN,EAAAC,EAAAC,cAACwN,EAAA,EAAD,CAAU3M,MAAOA,IACff,EAAAC,EAAAC,cAACyN,GAAD,OAEFC,SAASC,eAAe,SD0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,eCpGJpN","file":"static/js/main.3d6953a4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Typography, Link } from \"@material-ui/core\";\n\nexport default function MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with \"}\n      <span role=\"img\" aria-label=\"beer\">\n        🍺\n      </span>\n      {\", \"}\n      <span role=\"img\" aria-label=\"coffee\">\n        ☕\n      </span>\n      {\", and \"}\n      <span role=\"img\" aria-label=\"love\">\n        💗\n      </span>\n      {\" by \"}\n      <Link color=\"inherit\" href=\"https://linkedin.com/in/martzcodes/\">\n        martzcodes\n      </Link>\n      {\".\"}\n    </Typography>\n  );\n}\n","import store from \"..\";\nimport { sendToDiscord } from \"../services/discord\";\nimport { Dice } from \"dice-typescript\";\n\nexport const addRoll = ({\n  name,\n  roll,\n  character,\n  description\n}: {\n  name: string;\n  roll: string;\n  character: string;\n  description: string;\n}) => ({\n  type: \"ADD_ROLL\",\n  name,\n  roll,\n  character,\n  description\n});\n\nexport const sendRoll = (id: number) => {\n  console.log(store.getState());\n  const discord: any = store.getState().discord;\n  const rollInd = (store.getState().rolls as any).findIndex(\n    (roll: any) => roll.id === id\n  );\n  if (discord.apiKey && rollInd !== -1) {\n    const roll: any = (store.getState().rolls as any)[rollInd];\n    let msg = `${roll.description}`;\n    if (roll.roll) {\n      const dice = new Dice();\n      const result = dice.roll(roll.roll);\n      msg = `${roll.description}: ${result.renderedExpression} = ${\n        result.total\n      }`;\n    }\n    sendToDiscord(discord.apiKey, roll.character, msg);\n  }\n  return {\n    type: \"SEND_ROLL\",\n    id\n  };\n};\n\nexport const removeRoll = (id: number) => ({\n  type: \"REMOVE_ROLL\",\n  id\n});\n\nexport const setDiscord = (apiKey: string) => ({\n  type: \"SET_DISCORD\",\n  apiKey\n});\n","export const sendToDiscord = (\n  apiKey: string,\n  username: string,\n  message: string\n) => {\n  const payload = JSON.stringify({\n    content: message,\n    username: username\n  });\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: payload\n  };\n  console.log(payload);\n  fetch(apiKey, params);\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRoll } from \"../actions\";\nimport {\n  Theme,\n  makeStyles,\n  createStyles,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  character: string;\n  description: string;\n  roll: string;\n}\n\nconst AddRoll = ({ dispatch }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: \"\",\n    character: \"\",\n    description: \"\",\n    roll: \"\"\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const sendRoll = (e: any) => {\n    e.preventDefault();\n    if (!values.name.trim()) {\n      return;\n    }\n    dispatch(\n      addRoll({\n        name: values.name.trim(),\n        roll: values.roll.trim(),\n        character: values.character.trim(),\n        description: values.description.trim()\n      })\n    );\n    setValues({ ...values, name: \"\", description: \"\", roll: \"\" });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={sendRoll}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"name\"\n            label=\"Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"character\"\n            label=\"Character\"\n            className={classes.textField}\n            value={values.character}\n            onChange={handleChange(\"character\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"roll\"\n            label=\"Roll\"\n            className={classes.textField}\n            value={values.roll}\n            onChange={handleChange(\"roll\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            className={classes.description}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Add Roll\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nexport default connect()(AddRoll);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemIcon,\n  SvgIcon\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\n\nconst Roll = ({\n  onClick,\n  name,\n  roll,\n  character,\n  description,\n  onRemove\n}: any) => (\n  <ListItem button onClick={onClick}>\n    <ListItemText\n      primary={`${name}: ${roll}`}\n      secondary={`${character}: ${description}`}\n    />\n    <ListItemSecondaryAction>\n      <IconButton edge=\"end\" aria-label=\"Delete\" onClick={onRemove}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nRoll.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  roll: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired\n};\n\nexport default Roll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Roll from \"./Roll\";\nimport { List } from \"@material-ui/core\";\n\nconst RollList = ({ rolls, sendRoll, removeRoll }: any) => {\n  console.log(rolls);\n  return (\n    <List>\n      {rolls.map((roll: any) => (\n        <Roll\n          key={roll.id}\n          {...roll}\n          onClick={() => sendRoll(roll.id)}\n          onRemove={() => removeRoll(roll.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nRollList.propTypes = {\n  rolls: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      roll: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  sendRoll: PropTypes.func.isRequired,\n  removeRoll: PropTypes.func.isRequired\n};\n\nexport default RollList;\n","import { connect } from \"react-redux\";\nimport { sendRoll, removeRoll } from \"../actions\";\nimport RollList from \"../components/RollList\";\n\nconst getVisibleRolls = (rolls: any) => {\n  return rolls;\n};\n\nconst mapStateToProps = (state: any) => ({\n  rolls: getVisibleRolls(state.rolls)\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  sendRoll: (id: any) => dispatch(sendRoll(id)),\n  removeRoll: (id: any) => dispatch(removeRoll(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RollList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  createStyles,\n  TextField\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  apiKey: string;\n}\n\nconst DiscordKeyForm = ({ onSave, apiKey }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    apiKey: apiKey\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.apiKey);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"apiKey\"\n            label=\"API Key\"\n            className={classes.textField}\n            value={values.apiKey}\n            onChange={handleChange(\"apiKey\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nDiscordKeyForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  apiKey: PropTypes.string.isRequired\n};\n\nexport default DiscordKeyForm;\n","import { connect } from \"react-redux\";\nimport { sendRoll, removeRoll, setDiscord } from \"../actions\";\nimport DiscordKeyForm from \"../components/DiscordKeyForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    apiKey: state.discord.apiKey ? state.discord.apiKey : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (apiKey: any) => dispatch(setDiscord(apiKey))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscordKeyForm);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddRoll from \"../containers/AddRoll\";\nimport VisibleRollList from \"../containers/VisibleRollList\";\nimport DiscordKey from \"../containers/DiscordKey\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Landing() {\n  const classes: any = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <DiscordKey />\n        </Grid>\n        <Grid item xs={12}>\n          <AddRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <VisibleRollList />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Settings() {\n  const classes: any = useStyles();\n  //   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MadeWithLove from \"./components/MadeWithLove\";\nimport Landing from \"./landing/Landing\";\nimport Settings from \"./settings/Settings\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(\n  theme =>\n    ({\n      root: {\n        display: \"flex\"\n      },\n      toolbar: {\n        paddingRight: 24 // keep right padding when drawer closed\n      },\n      toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginRight: 36\n      },\n      menuButtonHidden: {\n        display: \"none\"\n      },\n      title: {\n        flexGrow: 1\n      },\n      drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9)\n        }\n      },\n      appBarSpacer: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\"\n      },\n      container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4)\n      },\n      paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\"\n      },\n      fixedHeight: {\n        height: 240\n      }\n    } as any)\n);\n\nconst App: React.FC = () => {\n  const classes: any = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            RPG Discord Tools\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{navList}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/\" component={Settings} />\n            </Switch>\n          </Router>\n        </Container>\n      </main>\n      <footer>\n        <MadeWithLove />\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { loadState, saveState } from \"./services/localStorage\";\nimport { throttle } from \"lodash\";\n\nconst persistedState = loadState();\nlet store: any;\nif (persistedState) {\n  store = createStore(rootReducer, persistedState);\n} else {\n  store = createStore(rootReducer);\n}\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      ...store.getState()\n    });\n  }, 1000)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store;\n","import { sendToDiscord } from \"../services/discord\";\nimport store from \"..\";\n\nconst rolls = (state = [], action: any) => {\n  switch (action.type) {\n    case \"ADD_ROLL\":\n      return [\n        ...state,\n        {\n          id:\n            state.length === 0\n              ? 0\n              : Math.max(\n                  ...state.map((val: any) => {\n                    console.log(val);\n                    return val.id;\n                  })\n                ) + 1,\n          name: action.name,\n          roll: action.roll,\n          description: action.description,\n          character: action.character\n        }\n      ];\n    case \"SEND_ROLL\":\n      return state;\n\n    case \"REMOVE_ROLL\":\n      const newState = Object.assign([], state);\n      newState.splice(\n        newState.findIndex((val: any) => val.id === action.id),\n        1\n      );\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default rolls;\n","const discord = (state = {}, action: any) => {\n  switch (action.type) {\n    case \"SET_DISCORD\":\n      return {\n        apiKey: action.apiKey\n      };\n    default:\n      return state;\n  }\n};\n\nexport default discord;\n","import { combineReducers } from \"redux\";\nimport rolls from \"./rolls\";\nimport discord from \"./discord\";\n\nexport default combineReducers({\n  rolls: rolls as any,\n  discord\n});\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n"],"sourceRoot":""}