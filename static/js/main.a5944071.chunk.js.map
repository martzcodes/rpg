{"version":3,"sources":["components/MadeWithLove.tsx","services/discord.ts","actions/index.ts","services/expanse.ts","containers/AddRoll.tsx","components/Roll.tsx","components/RollList.tsx","containers/VisibleRollList.tsx","components/ManualRoll.tsx","dnd/Dnd.tsx","components/DiscordKeyForm.tsx","containers/DiscordKey.tsx","components/ExpanseDataForm.tsx","containers/ExpanseData.tsx","settings/Settings.tsx","expanse/character/ExpanseCharacterForm.tsx","expanse/character/ExpanseCharacter.tsx","expanse/drama/ExpanseDramaForm.tsx","expanse/drama/ExpanseDrama.tsx","expanse/fortune/ExpanseFortuneForm.tsx","expanse/fortune/ExpanseFortune.tsx","expanse/fortune/ExpanseFortuneMaxForm.tsx","expanse/fortune/ExpanseFortuneMax.tsx","expanse/stats/ExpanseStatRollForm.tsx","expanse/stats/ExpanseStatRoll.tsx","expanse/ExpanseMain.tsx","expanse/Expanse.tsx","App.tsx","serviceWorker.ts","index.tsx","reducers/rolls.ts","reducers/discord.ts","reducers/expanse.ts","reducers/index.ts","services/localStorage.ts"],"names":["MadeWithLove","react_default","a","createElement","Typography","variant","color","align","role","aria-label","Link","href","sendToDiscord","apiKey","username","message","payload","JSON","stringify","content","params","headers","Content-Type","method","body","console","log","fetch","setExpanseRoll","roll","dice","modifier","target","sp","description","msg","discord","store","getState","expanse","name","type","setExpanseDataLocation","dataLocation","dispatch","then","value","json","retrieveExpanseData","data","setExpanseData","useStyles","makeStyles","theme","createStyles","container","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","card","connect","_ref","classes","_React$useState","React","useState","character","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","className","noValidate","autoComplete","onSubmit","e","preventDefault","trim","Card","CardContent","TextField","id","label","onChange","margin","CardActions","Button","size","Roll","onClick","onRemove","ListItem","button","ListItemText","primary","concat","secondary","ListItemSecondaryAction","IconButton","edge","Delete_default","RollList","rolls","sendRoll","removeRoll","List","map","components_Roll","assign","key","state","rollInd","findIndex","result","Dice","renderedExpression","total","ManualRoll","Dnd","Container","maxWidth","Grid","item","xs","components_ManualRoll","containers_AddRoll","Paper","paper","VisibleRollList","DiscordKeyForm","onSave","setDiscord","ExpanseDataForm","Settings","DiscordKey","ExpanseData","ExpanseCharacterForm","accuracy","communication","constitution","dexterity","fighting","intelligence","perception","strength","willpower","setExpanseCharacter","ExpanseDramaForm","CardHeader","title","rawResults","reducedExpression","children","res","attributes","resultSet","Set","bonus","Number","parseInt","isNaN","status","sign","join","Math","abs","length","typography","backgroundColor","palette","background","padding","ExpanseFortuneForm","currentFortune","maxFortune","newDice","toConsumableArray","spendTotal","diceInd","tempDice","diceValue","forEach","ind","stuntPoints","FormControl","component","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","disabled","labelPlacement","rollTotal","setExpanseSpent","current","ExpanseFortuneMaxForm","setExpanseMaxFortune","ExpanseStatRollForm","material_table_dist_default","actions","icon","tooltip","rowData","stat","ability","focus","columns","field","discordApiKey","ExpanseCharacter","ExpanseFortuneMax","ExpanseStatRoll","ExpanseDrama","ExpanseFortune","stunt","cost","stunts","ExpanseMain","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","App","open","setOpen","react_router_dom","basename","CssBaseline","AppBar","clsx","Toolbar","Menu_default","noWrap","Drawer","ChevronLeft_default","Divider","MenuList","to","style","textDecoration","MenuItem","ListItemIcon","Brightness5_default","Gavel_default","Settings_default","react_router","exact","path","Expanse","Boolean","window","location","hostname","match","arguments","undefined","action","max","apply","val","newState","splice","combineReducers","persistedState","serializedState","localStorage","getItem","parse","err","loadState","createStore","rootReducer","applyMiddleware","thunk","subscribe","throttle","setItem","_unused","saveState","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5944071.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Typography, Link } from \"@material-ui/core\";\n\nexport default function MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with \"}\n      <span role=\"img\" aria-label=\"beer\">\n        🍺\n      </span>\n      {\", \"}\n      <span role=\"img\" aria-label=\"coffee\">\n        ☕\n      </span>\n      {\", and \"}\n      <span role=\"img\" aria-label=\"love\">\n        💗\n      </span>\n      {\" by \"}\n      <Link color=\"inherit\" href=\"https://linkedin.com/in/martzcodes/\">\n        martzcodes\n      </Link>\n      {\".\"}\n    </Typography>\n  );\n}\n","export const sendToDiscord = (\n  apiKey: string,\n  username: string,\n  message: string\n) => {\n  const payload = JSON.stringify({\n    content: message,\n    username: username\n  });\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: payload\n  };\n  console.log(payload);\n  fetch(apiKey, params);\n};\n","import store from \"..\";\nimport { sendToDiscord } from \"../services/discord\";\nimport { Dice } from \"dice-typescript\";\nimport { retrieveExpanseData } from \"../services/expanse\";\nimport ICharacterStats from \"../expanse/ICharacterStats\";\n\nexport const addRoll = ({\n  name,\n  roll,\n  character,\n  description\n}: {\n  name: string;\n  roll: string;\n  character: string;\n  description: string;\n}) => ({\n  type: \"ADD_ROLL\",\n  name,\n  roll,\n  character,\n  description\n});\n\nexport const sendRoll = (id: number) => {\n  console.log(store.getState());\n  const discord: any = store.getState().discord;\n  const rollInd = (store.getState().rolls as any).findIndex(\n    (roll: any) => roll.id === id\n  );\n  if (discord.apiKey && rollInd !== -1) {\n    const roll: any = (store.getState().rolls as any)[rollInd];\n    let msg = `${roll.description}`;\n    if (roll.roll) {\n      const dice = new Dice();\n      const result = dice.roll(roll.roll);\n      msg = `${roll.description}: (${roll.roll}) ${\n        result.renderedExpression\n      } = ${result.total}`;\n    }\n    sendToDiscord(discord.apiKey, roll.character, msg);\n  }\n  return {\n    type: \"SEND_ROLL\",\n    id\n  };\n};\n\nexport const removeRoll = (id: number) => ({\n  type: \"REMOVE_ROLL\",\n  id\n});\n\nexport const setDiscord = (apiKey: string) => ({\n  type: \"SET_DISCORD\",\n  apiKey\n});\n\nexport const setExpanseCharacter = (character: ICharacterStats) => ({\n  type: \"SET_EXPANSE_CHARACTER\",\n  character\n});\n\nexport const setExpanseMaxFortune = (maxFortune: number) => ({\n  type: \"SET_EXPANSE_MAX_FORTUNE\",\n  maxFortune\n});\n\nexport const setExpanseCurrentFortune = (currentFortune: number) => ({\n  type: \"SET_EXPANSE_CURRENT_FORTUNE\",\n  currentFortune\n});\n\nexport const setExpanseRoll = (\n  roll: number,\n  dice: any,\n  modifier: number,\n  target: number,\n  sp: number,\n  description: string,\n  msg: string\n) => {\n  const discord: any = store.getState().discord;\n  const expanse: any = store.getState().expanse;\n  if (discord.apiKey) {\n    sendToDiscord(discord.apiKey, expanse.name, msg);\n  }\n  return {\n    type: \"SET_EXPANSE_ROLL\",\n    roll,\n    dice,\n    modifier,\n    target,\n    sp,\n    description\n  };\n};\n\nexport const setExpanseSpent = (\n  roll: number,\n  dice: any,\n  sp: number,\n  currentFortune: number,\n  msg: string\n) => {\n  const discord: any = store.getState().discord;\n  const expanse: any = store.getState().expanse;\n  if (discord.apiKey) {\n    sendToDiscord(discord.apiKey, expanse.name, msg);\n  }\n  return {\n    type: \"SET_EXPANSE_FORTUNE_SPENT\",\n    roll,\n    dice,\n    sp,\n    currentFortune\n  };\n};\n\nexport const setExpanseDataLocation = (dataLocation: string) => {\n  return function(dispatch: any) {\n    return retrieveExpanseData(dataLocation).then((data: any) => {\n      dispatch(setExpanseData(dataLocation, data));\n    });\n  };\n};\n\nexport const setExpanseData = (dataLocation: string, data: any) => ({\n  type: \"SET_EXPANSE_DATA\",\n  dataLocation,\n  data\n});\n","export const retrieveExpanseData = (dataLocation: string) => {\n  return fetch(dataLocation).then((value: any) => value.json());\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRoll } from \"../actions\";\nimport {\n  Theme,\n  makeStyles,\n  createStyles,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  character: string;\n  description: string;\n  roll: string;\n}\n\nconst AddRoll = ({ dispatch }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: \"\",\n    character: \"\",\n    description: \"\",\n    roll: \"\"\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const sendRoll = (e: any) => {\n    e.preventDefault();\n    if (!values.name.trim()) {\n      return;\n    }\n    dispatch(\n      addRoll({\n        name: values.name.trim(),\n        roll: values.roll.trim(),\n        character: values.character.trim(),\n        description: values.description.trim()\n      })\n    );\n    setValues({ ...values, name: \"\", description: \"\", roll: \"\" });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={sendRoll}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"name\"\n            label=\"Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"character\"\n            label=\"Character\"\n            className={classes.textField}\n            value={values.character}\n            onChange={handleChange(\"character\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"roll\"\n            label=\"Roll\"\n            className={classes.textField}\n            value={values.roll}\n            onChange={handleChange(\"roll\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            className={classes.description}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Add Roll\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nexport default connect()(AddRoll);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst Roll = ({\n  onClick,\n  name,\n  roll,\n  character,\n  description,\n  onRemove\n}: any) => (\n  <ListItem button onClick={onClick}>\n    <ListItemText\n      primary={`${name}: ${roll}`}\n      secondary={`${character}: ${description}`}\n    />\n    <ListItemSecondaryAction>\n      <IconButton edge=\"end\" aria-label=\"Delete\" onClick={onRemove}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nRoll.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  roll: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired\n};\n\nexport default Roll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Roll from \"./Roll\";\nimport { List } from \"@material-ui/core\";\n\nconst RollList = ({ rolls, sendRoll, removeRoll }: any) => {\n  console.log(rolls);\n  return (\n    <List>\n      {rolls.map((roll: any) => (\n        <Roll\n          key={roll.id}\n          {...roll}\n          onClick={() => sendRoll(roll.id)}\n          onRemove={() => removeRoll(roll.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nRollList.propTypes = {\n  rolls: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      roll: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  sendRoll: PropTypes.func.isRequired,\n  removeRoll: PropTypes.func.isRequired\n};\n\nexport default RollList;\n","import { connect } from \"react-redux\";\nimport { sendRoll, removeRoll } from \"../actions\";\nimport RollList from \"../components/RollList\";\n\nconst getVisibleRolls = (rolls: any) => {\n  return rolls;\n};\n\nconst mapStateToProps = (state: any) => ({\n  rolls: getVisibleRolls(state.rolls)\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  sendRoll: (id: any) => dispatch(sendRoll(id)),\n  removeRoll: (id: any) => dispatch(removeRoll(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RollList);\n","import React from \"react\";\nimport {\n  Theme,\n  makeStyles,\n  createStyles,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\nimport store from \"..\";\nimport { Dice } from \"dice-typescript\";\nimport { sendToDiscord } from \"../services/discord\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  target: string;\n  character: string;\n  description: string;\n  roll: string;\n}\n\nconst ManualRoll = () => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    target: \"\",\n    character: \"\",\n    description: \"\",\n    roll: \"\"\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const sendRoll = (e: any) => {\n    e.preventDefault();\n    if (!values.character.trim()) {\n      return;\n    }\n    const discord: any = store.getState().discord;\n    if (discord.apiKey) {\n      let msg = `${values.description}`;\n      if (values.roll) {\n        const dice = new Dice();\n        const result = dice.roll(values.roll);\n        msg = `${values.description}: (${values.roll}) ${\n          result.renderedExpression\n        } = ${result.total}`;\n        if (values.target.trim()) {\n          msg += ` against ${values.target.trim()}`;\n        }\n      }\n      sendToDiscord(discord.apiKey, values.character, msg);\n    }\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={sendRoll}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"character\"\n            label=\"Character\"\n            className={classes.textField}\n            value={values.character}\n            onChange={handleChange(\"character\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"roll\"\n            label=\"Roll\"\n            className={classes.textField}\n            value={values.roll}\n            onChange={handleChange(\"roll\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            className={classes.description}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"target\"\n            label=\"Target\"\n            className={classes.textField}\n            value={values.target}\n            onChange={handleChange(\"target\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Send to Discord\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nexport default ManualRoll;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddRoll from \"../containers/AddRoll\";\nimport VisibleRollList from \"../containers/VisibleRollList\";\nimport ManualRoll from \"../components/ManualRoll\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Dnd() {\n  const classes: any = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <ManualRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <AddRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <VisibleRollList />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  apiKey: string;\n}\n\nconst DiscordKeyForm = ({ onSave, apiKey }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    apiKey: apiKey\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.apiKey);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"apiKey\"\n            label=\"Discord API Key (full URL)\"\n            className={classes.textField}\n            value={values.apiKey}\n            onChange={handleChange(\"apiKey\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nDiscordKeyForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  apiKey: PropTypes.string.isRequired\n};\n\nexport default DiscordKeyForm;\n","import { connect } from \"react-redux\";\nimport { setDiscord } from \"../actions\";\nimport DiscordKeyForm from \"../components/DiscordKeyForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    apiKey: state.discord.apiKey ? state.discord.apiKey : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (apiKey: any) => dispatch(setDiscord(apiKey))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscordKeyForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  dataLocation: string;\n}\n\nconst ExpanseDataForm = ({ onSave, dataLocation }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    dataLocation: dataLocation\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.dataLocation);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"dataLocation\"\n            label=\"Expanse Data Location (possibly a github gist)\"\n            className={classes.textField}\n            value={values.dataLocation}\n            onChange={handleChange(\"dataLocation\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseDataForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  dataLocation: PropTypes.string.isRequired\n};\n\nexport default ExpanseDataForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseDataLocation } from \"../actions\";\nimport ExpanseDataForm from \"../components/ExpanseDataForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    dataLocation: state.expanse.dataLocation ? state.expanse.dataLocation : \"\",\n    data: state.expanse.data ? state.expanse.data : {}\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (dataLocation: any) => {\n    dispatch(setExpanseDataLocation(dataLocation));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseDataForm);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DiscordKey from \"../containers/DiscordKey\";\nimport ExpanseData from \"../containers/ExpanseData\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Settings() {\n  const classes: any = useStyles();\n  //   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <DiscordKey />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseData />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  accuracy: number;\n  communication: number;\n  constitution: number;\n  dexterity: number;\n  fighting: number;\n  intelligence: number;\n  perception: number;\n  strength: number;\n  willpower: number;\n}\n\nconst ExpanseCharacterForm = ({\n  onSave,\n  name,\n  accuracy,\n  communication,\n  constitution,\n  dexterity,\n  fighting,\n  intelligence,\n  perception,\n  strength,\n  willpower\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    accuracy: accuracy,\n    communication: communication,\n    constitution: constitution,\n    dexterity: dexterity,\n    fighting: fighting,\n    intelligence: intelligence,\n    perception: perception,\n    strength: strength,\n    willpower: willpower\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave({\n          name: values.name,\n          accuracy: values.accuracy,\n          communication: values.communication,\n          constitution: values.constitution,\n          dexterity: values.dexterity,\n          fighting: values.fighting,\n          intelligence: values.intelligence,\n          perception: values.perception,\n          strength: values.strength,\n          willpower: values.willpower\n        });\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"name\"\n            label=\"Character Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"accuracy\"\n            label=\"Character Accuracy\"\n            className={classes.textField}\n            value={values.accuracy}\n            onChange={handleChange(\"accuracy\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"communication\"\n            label=\"Character Communication\"\n            className={classes.textField}\n            value={values.communication}\n            onChange={handleChange(\"communication\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"constitution\"\n            label=\"Character Constitution\"\n            className={classes.textField}\n            value={values.constitution}\n            onChange={handleChange(\"constitution\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"dexterity\"\n            label=\"Character Dexterity\"\n            className={classes.textField}\n            value={values.dexterity}\n            onChange={handleChange(\"dexterity\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"fighting\"\n            label=\"Character Fighting\"\n            className={classes.textField}\n            value={values.fighting}\n            onChange={handleChange(\"fighting\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"intelligence\"\n            label=\"Character Intelligence\"\n            className={classes.textField}\n            value={values.intelligence}\n            onChange={handleChange(\"intelligence\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"perception\"\n            label=\"Character Perception\"\n            className={classes.textField}\n            value={values.perception}\n            onChange={handleChange(\"perception\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"strength\"\n            label=\"Character Strength\"\n            className={classes.textField}\n            value={values.strength}\n            onChange={handleChange(\"strength\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"willpower\"\n            label=\"Character Willpower\"\n            className={classes.textField}\n            value={values.willpower}\n            onChange={handleChange(\"willpower\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseCharacterForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default ExpanseCharacterForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseCharacter } from \"../../actions\";\nimport ExpanseCharacterForm from \"./ExpanseCharacterForm\";\nimport ICharacterStats from \"../ICharacterStats\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    accuracy: state.expanse.accuracy ? state.expanse.accuracy : 0,\n    communication: state.expanse.communication\n      ? state.expanse.communication\n      : 0,\n    constitution: state.expanse.constitution ? state.expanse.constitution : 0,\n    dexterity: state.expanse.dexterity ? state.expanse.dexterity : 0,\n    fighting: state.expanse.fighting ? state.expanse.fighting : 0,\n    intelligence: state.expanse.intelligence ? state.expanse.intelligence : 0,\n    perception: state.expanse.perception ? state.expanse.perception : 0,\n    strength: state.expanse.strength ? state.expanse.strength : 0,\n    willpower: state.expanse.willpower ? state.expanse.willpower : 0\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (character: ICharacterStats) =>\n    dispatch(setExpanseCharacter(character))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseCharacterForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField, CardHeader } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  modifier: number;\n  target: number;\n  description: string;\n}\n\nconst ExpanseDramaForm = ({\n  onSave,\n  name,\n  modifier,\n  target,\n  description\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    modifier: modifier,\n    target: target,\n    description: description\n  });\n  if (name !== values.name || description !== values.description) {\n    setValues({\n      name: name,\n      modifier: modifier,\n      target: target,\n      description: description\n    });\n  }\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.name, values.modifier, values.target, values.description);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardHeader title=\"Manual Roll\" />\n        <CardContent>\n          <TextField\n            id=\"modifier\"\n            label=\"Modifier\"\n            className={classes.textField}\n            value={values.modifier}\n            onChange={handleChange(\"modifier\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Action Description\"\n            className={classes.textField}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"target\"\n            label=\"Target\"\n            className={classes.textField}\n            value={values.target}\n            onChange={handleChange(\"target\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Roll and Send\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseDramaForm.propTypes = {\n  onSave: PropTypes.func.isRequired\n};\n\nexport default ExpanseDramaForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseRoll } from \"../../actions\";\nimport ExpanseDramaForm from \"./ExpanseDramaForm\";\nimport { Dice } from \"dice-typescript\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    roll: state.expanse.roll ? state.expanse.roll : 0,\n    dice: state.expanse.dice ? state.expanse.dice : [],\n    modifier: state.expanse.modifier ? state.expanse.modifier : 0,\n    target: state.expanse.target ? state.expanse.target : 0,\n    sp: state.expanse.sp ? state.expanse.sp : 0,\n    description: state.expanse.description ? state.expanse.description : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (\n    name: string,\n    modifier: number,\n    target: number,\n    description: string\n  ) => {\n    if (!name.trim()) {\n      return;\n    }\n    const dice = new Dice();\n    const result = dice.roll(\"3d6\");\n    // kinda pointless to use dice-typescript at this point...\n    const rawResults = (result.reducedExpression as any).children.map(\n      (res: any) => res.attributes.value\n    );\n    const resultSet = new Set(rawResults);\n    let bonus = Number.parseInt(`${modifier}`, 10);\n    if (isNaN(bonus)) {\n      bonus = 0;\n    }\n    let status = \"FAIL\";\n    if (result.total + bonus >= target) {\n      status = \"SUCCESS\";\n    }\n    const sign = bonus < 0 ? \" - \" : \" + \";\n    const msg = `${status} ([${rawResults.join(\", \")}]${sign}${Math.abs(\n      bonus\n    )} vs ${target}) Rolled a ${result.total + bonus}${\n      description.trim().length > 0 ? \" for \" + description.trim() : \"\"\n    }${\n      resultSet.size <= 2 && status === \"SUCCESS\"\n        ? \". \" + rawResults[2] + \" stunt points available\"\n        : \"\"\n    }`;\n    let sp = 0;\n    if (resultSet.size <= 2 && status === \"SUCCESS\") {\n      sp = rawResults[2];\n    }\n    console.log(msg);\n\n    dispatch(\n      setExpanseRoll(\n        result.total,\n        rawResults,\n        modifier,\n        target,\n        sp,\n        description,\n        msg\n      )\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseDramaForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  createStyles,\n  Radio,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  CardHeader\n} from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    },\n    target: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1)\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  modifier: number;\n  dice: number[];\n  newDice: number[];\n  spendTotal: number;\n  target: number;\n  currentFortune: number;\n  maxFortune: number;\n}\n\nconst ExpanseFortuneForm = ({\n  onSave,\n  name,\n  modifier,\n  dice,\n  target,\n  currentFortune,\n  maxFortune\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    modifier: modifier,\n    dice: dice,\n    newDice: [...dice],\n    spendTotal: 0,\n    target: target,\n    currentFortune: currentFortune,\n    maxFortune: maxFortune\n  });\n\n  const handleChange = (diceInd: number) => (\n    event: React.ChangeEvent<unknown>\n  ) => {\n    const tempDice = [...values.newDice];\n    const diceValue = Number.parseInt(\n      `${(event.target as HTMLInputElement).value}`,\n      10\n    );\n    tempDice[diceInd] = diceValue;\n    let spendTotal = 0;\n    tempDice.forEach((roll, ind) => {\n      if (roll !== values.dice[ind]) {\n        spendTotal += roll;\n        if (ind === 2) {\n          spendTotal += roll;\n        }\n      }\n    });\n    setValues({ ...values, newDice: tempDice, spendTotal: spendTotal });\n  };\n\n  const stuntPoints = () => {\n    const resultSet = new Set(values.newDice);\n    if (resultSet.size <= 2) {\n      return values.newDice[2];\n    } else {\n      return 0;\n    }\n  };\n\n  const rollTotal = () => {\n    let total = Number.parseInt(`${values.modifier}`, 10);\n    values.newDice.forEach(roll => {\n      total += roll;\n    });\n    return total;\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(\n          values.name,\n          values.modifier,\n          values.target,\n          values.newDice,\n          values.spendTotal,\n          values.currentFortune,\n          values.maxFortune,\n          stuntPoints()\n        );\n      }}\n    >\n      <Card className={classes.card}>\n        <CardHeader title=\"Fortune Spender\" />\n        <CardContent>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Dice 1</FormLabel>\n            <RadioGroup\n              aria-label=\"position\"\n              name=\"position\"\n              value={`${values.newDice[0]}`}\n              onChange={handleChange(0)}\n              row\n            >\n              <FormControlLabel\n                value=\"1\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 1} />}\n                label=\"1\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"2\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 2} />}\n                label=\"2\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"3\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 3} />}\n                label=\"3\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"4\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 4} />}\n                label=\"4\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"5\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 5} />}\n                label=\"5\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"6\"\n                control={<Radio color=\"primary\" disabled={dice[0] > 6} />}\n                label=\"6\"\n                labelPlacement=\"bottom\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Dice 2</FormLabel>\n            <RadioGroup\n              aria-label=\"position\"\n              name=\"position\"\n              value={`${values.newDice[1]}`}\n              onChange={handleChange(1)}\n              row\n            >\n              <FormControlLabel\n                value=\"1\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 1} />}\n                label=\"1\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"2\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 2} />}\n                label=\"2\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"3\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 3} />}\n                label=\"3\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"4\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 4} />}\n                label=\"4\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"5\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 5} />}\n                label=\"5\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"6\"\n                control={<Radio color=\"primary\" disabled={dice[1] > 6} />}\n                label=\"6\"\n                labelPlacement=\"bottom\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Drama</FormLabel>\n            <RadioGroup\n              aria-label=\"position\"\n              name=\"position\"\n              value={`${values.newDice[2]}`}\n              onChange={handleChange(2)}\n              row\n            >\n              <FormControlLabel\n                value=\"1\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 1} />}\n                label=\"1\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"2\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 2} />}\n                label=\"2\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"3\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 3} />}\n                label=\"3\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"4\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 4} />}\n                label=\"4\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"5\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 5} />}\n                label=\"5\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"6\"\n                control={<Radio color=\"primary\" disabled={dice[2] > 6} />}\n                label=\"6\"\n                labelPlacement=\"bottom\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <div className={classes.target}>\n            {`${\n              values.spendTotal > 0 ? \"New \" : \" \"\n            }Total ${rollTotal()} vs Target ${\n              values.target\n            }: ${stuntPoints()} Stunt Points`}\n          </div>\n        </CardContent>\n        <CardActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={\n              values.spendTotal === 0 ||\n              values.currentFortune - values.spendTotal <= 0\n            }\n          >\n            Spend {`${values.spendTotal}`} Fortune\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseFortuneForm.propTypes = {\n  onSave: PropTypes.func.isRequired\n};\n\nexport default ExpanseFortuneForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseSpent } from \"../../actions\";\nimport ExpanseFortuneForm from \"./ExpanseFortuneForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    roll: state.expanse.roll ? state.expanse.roll : 0,\n    dice: state.expanse.dice ? state.expanse.dice : [1, 1, 1],\n    modifier: state.expanse.modifier ? state.expanse.modifier : 0,\n    target: state.expanse.target ? state.expanse.target : 0,\n    currentFortune: state.expanse.currentFortune\n      ? state.expanse.currentFortune\n      : 0,\n    maxFortune: state.expanse.maxFortune ? state.expanse.maxFortune : 0\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (\n    name: string,\n    modifier: number,\n    target: number,\n    newDice: number[],\n    spendTotal: number,\n    currentFortune: number,\n    maxFortune: number,\n    stuntPoints: number\n  ) => {\n    if (!name.trim()) {\n      return;\n    }\n    let total = 0;\n    newDice.forEach(roll => {\n      total += roll;\n    });\n\n    const sign = Number.parseInt(`${modifier}`, 10) < 0 ? \" - \" : \" + \";\n\n    const msg = `${name} spent ${spendTotal} fortune to bring the roll total to [${newDice.join(\n      \", \"\n    )}] ${sign} ${Math.abs(modifier)} = ${total +\n      Number.parseInt(\n        `${modifier}`,\n        10\n      )} vs ${target}.  Current Fortune: ${currentFortune -\n      spendTotal} / ${maxFortune}${\n      stuntPoints > 0 ? \". \" + stuntPoints + \" stunt points available\" : \"\"\n    }`;\n\n    console.log(msg);\n    dispatch(\n      setExpanseSpent(\n        total + Number.parseInt(`${modifier}`, 10),\n        newDice,\n        stuntPoints,\n        currentFortune - spendTotal,\n        msg\n      )\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseFortuneForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    },\n    current: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1)\n    }\n  })\n);\n\ninterface State {\n  maxFortune: number;\n}\n\nconst ExpanseFortuneMaxForm = ({ onSave, maxFortune, currentFortune }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    maxFortune: maxFortune\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setValues({\n      ...values,\n      maxFortune: Number.parseInt(event.target.value, 10)\n    });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.maxFortune);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"maxFortune\"\n            label=\"Character Max Fortune\"\n            className={classes.textField}\n            value={values.maxFortune}\n            onChange={handleChange(\"maxFortune\")}\n            margin=\"normal\"\n          />\n          <div className={classes.current}>\n            {`Current Fortune: ${currentFortune}`}\n          </div>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseFortuneMaxForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  maxFortune: PropTypes.number.isRequired\n};\n\nexport default ExpanseFortuneMaxForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseMaxFortune } from \"../../actions\";\nimport ExpanseFortuneMaxForm from \"./ExpanseFortuneMaxForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentFortune: state.expanse.currentFortune\n      ? state.expanse.currentFortune\n      : 0,\n    maxFortune: state.expanse.maxFortune ? state.expanse.maxFortune : 0\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (maxFortune: number) => dispatch(setExpanseMaxFortune(maxFortune))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseFortuneMaxForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField, CardHeader } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { sendToDiscord } from \"../../services/discord\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  accuracy: number;\n  communication: number;\n  constitution: number;\n  dexterity: number;\n  fighting: number;\n  intelligence: number;\n  perception: number;\n  strength: number;\n  willpower: number;\n  target: number;\n}\n\nconst ExpanseStatRollForm = ({\n  onSave,\n  name,\n  accuracy,\n  communication,\n  constitution,\n  dexterity,\n  fighting,\n  intelligence,\n  perception,\n  strength,\n  willpower\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    accuracy: accuracy,\n    communication: communication,\n    constitution: constitution,\n    dexterity: dexterity,\n    fighting: fighting,\n    intelligence: intelligence,\n    perception: perception,\n    strength: strength,\n    willpower: willpower,\n    target: 10\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Manual Roll\" />\n        <CardContent>\n          <TextField\n            id=\"target\"\n            label=\"Target\"\n            className={classes.textField}\n            value={values.target}\n            onChange={handleChange(\"target\")}\n            margin=\"normal\"\n          />\n          <MaterialTable\n            actions={[\n              {\n                icon: \"send\",\n                tooltip: \"Roll\",\n                onClick: (event, rowData) => {\n                  const stat = rowData as any;\n                  onSave(\n                    values.name,\n                    Number.parseInt(`${stat.modifier}`, 10),\n                    values.target,\n                    `(${stat.ability}) ${stat.focus}`\n                  );\n                }\n              },\n              {\n                icon: \"favorite\",\n                tooltip: \"Roll with Focus\",\n                onClick: (event, rowData) => {\n                  const stat = rowData as any;\n                  onSave(\n                    values.name,\n                    Number.parseInt(`${stat.modifier}`, 10) + 2,\n                    values.target,\n                    `(${stat.ability}) ${stat.focus}`\n                  );\n                }\n              }\n            ]}\n            columns={[\n              { title: \"Ability\", field: \"ability\" },\n              { title: \"Focus\", field: \"focus\" },\n              { title: \"Modifier\", field: \"modifier\", type: \"numeric\" }\n            ]}\n            data={[\n              { ability: \"Accuracy\", focus: \"Generic\", modifier: accuracy },\n              { ability: \"Accuracy\", focus: \"Bows\", modifier: accuracy },\n              { ability: \"Accuracy\", focus: \"Gunnery\", modifier: accuracy },\n              { ability: \"Accuracy\", focus: \"Pistols\", modifier: accuracy },\n              { ability: \"Accuracy\", focus: \"Rifles\", modifier: accuracy },\n              { ability: \"Accuracy\", focus: \"Throwing\", modifier: accuracy },\n              {\n                ability: \"Communication\",\n                focus: \"Generic\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Bargaining\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Deception\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Disguise\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Etiquette\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Expression\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Gambling\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Investigation\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Leadership\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Performing\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Persuasion\",\n                modifier: communication\n              },\n              {\n                ability: \"Communication\",\n                focus: \"Seduction\",\n                modifier: communication\n              },\n              {\n                ability: \"Constitution\",\n                focus: \"Generic\",\n                modifier: constitution\n              },\n              {\n                ability: \"Constitution\",\n                focus: \"Running\",\n                modifier: constitution\n              },\n              {\n                ability: \"Constitution\",\n                focus: \"Stamina\",\n                modifier: constitution\n              },\n              {\n                ability: \"Constitution\",\n                focus: \"Swimming\",\n                modifier: constitution\n              },\n              {\n                ability: \"Constitution\",\n                focus: \"Tolerance\",\n                modifier: constitution\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Generic\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Crafting\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Driving\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Free-fall\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Initiative\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Piloting\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Sleight of Hand\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Dexterity\",\n                focus: \"Stealth\",\n                modifier: dexterity\n              },\n              {\n                ability: \"Fighting\",\n                focus: \"Generic\",\n                modifier: fighting\n              },\n              {\n                ability: \"Fighting\",\n                focus: \"Brawling\",\n                modifier: fighting\n              },\n              {\n                ability: \"Fighting\",\n                focus: \"Grappling\",\n                modifier: fighting\n              },\n              {\n                ability: \"Fighting\",\n                focus: \"Heavy Weapons\",\n                modifier: fighting\n              },\n              {\n                ability: \"Fighting\",\n                focus: \"Light Weapons\",\n                modifier: fighting\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Generic\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Art\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Business\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Cryptography\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Current Affairs\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Demolitions\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Engineering\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Evaluation\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Law\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Medicine\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Navigation\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Research\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Science\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Security\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Tactics\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Intelligence\",\n                focus: \"Technology\",\n                modifier: intelligence\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Generic\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Empathy\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Hearing\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Intuition\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Searching\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Seeing\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Smelling\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Survival\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Tasting\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Touching\",\n                modifier: perception\n              },\n              {\n                ability: \"Perception\",\n                focus: \"Tracking\",\n                modifier: perception\n              },\n              {\n                ability: \"Strength\",\n                focus: \"Generic\",\n                modifier: strength\n              },\n              {\n                ability: \"Strength\",\n                focus: \"Climbing\",\n                modifier: strength\n              },\n              {\n                ability: \"Strength\",\n                focus: \"Intimidation\",\n                modifier: strength\n              },\n              {\n                ability: \"Strength\",\n                focus: \"Jumping\",\n                modifier: strength\n              },\n              {\n                ability: \"Strength\",\n                focus: \"Might\",\n                modifier: strength\n              },\n              {\n                ability: \"Willpower\",\n                focus: \"Generic\",\n                modifier: willpower\n              },\n              {\n                ability: \"Willpower\",\n                focus: \"Courage\",\n                modifier: willpower\n              },\n              {\n                ability: \"Willpower\",\n                focus: \"Faith\",\n                modifier: willpower\n              },\n              {\n                ability: \"Willpower\",\n                focus: \"Self-Discipline\",\n                modifier: willpower\n              }\n            ]}\n            title=\"Stat Rolls\"\n          />\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nExpanseStatRollForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default ExpanseStatRollForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseCharacter, setExpanseRoll } from \"../../actions\";\nimport ExpanseStatRollForm from \"./ExpanseStatRollForm\";\nimport ICharacterStats from \"../ICharacterStats\";\nimport { Dice } from \"dice-typescript\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    accuracy: state.expanse.accuracy ? state.expanse.accuracy : 0,\n    communication: state.expanse.communication\n      ? state.expanse.communication\n      : 0,\n    constitution: state.expanse.constitution ? state.expanse.constitution : 0,\n    dexterity: state.expanse.dexterity ? state.expanse.dexterity : 0,\n    fighting: state.expanse.fighting ? state.expanse.fighting : 0,\n    intelligence: state.expanse.intelligence ? state.expanse.intelligence : 0,\n    perception: state.expanse.perception ? state.expanse.perception : 0,\n    strength: state.expanse.strength ? state.expanse.strength : 0,\n    willpower: state.expanse.willpower ? state.expanse.willpower : 0\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (\n    name: string,\n    modifier: number,\n    target: number,\n    description: string\n  ) => {\n    if (!name.trim()) {\n      return;\n    }\n    const dice = new Dice();\n    const result = dice.roll(\"3d6\");\n    // kinda pointless to use dice-typescript at this point...\n    const rawResults = (result.reducedExpression as any).children.map(\n      (res: any) => res.attributes.value\n    );\n    const resultSet = new Set(rawResults);\n    let bonus = Number.parseInt(`${modifier}`, 10);\n    if (isNaN(bonus)) {\n      bonus = 0;\n    }\n    let status = \"FAIL\";\n    if (result.total + bonus >= target) {\n      status = \"SUCCESS\";\n    }\n    const sign = bonus < 0 ? \" - \" : \" + \";\n    const msg = `${status} ([${rawResults.join(\", \")}]${sign}${Math.abs(\n      bonus\n    )} vs ${target}) Rolled a ${result.total + bonus}${\n      description.trim().length > 0 ? \" for \" + description.trim() : \"\"\n    }${\n      resultSet.size <= 2 && status === \"SUCCESS\"\n        ? \". \" + rawResults[2] + \" stunt points available\"\n        : \"\"\n    }`;\n    let sp = 0;\n    if (resultSet.size <= 2 && status === \"SUCCESS\") {\n      sp = rawResults[2];\n    }\n    console.log(msg);\n\n    dispatch(\n      setExpanseRoll(\n        result.total,\n        rawResults,\n        modifier,\n        target,\n        sp,\n        description,\n        msg\n      )\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseStatRollForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles } from \"@material-ui/core\";\n\nimport { Theme, makeStyles } from \"@material-ui/core\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialTable from \"material-table\";\nimport ExpanseCharacter from \"./character/ExpanseCharacter\";\nimport ExpanseDrama from \"./drama/ExpanseDrama\";\nimport { sendToDiscord } from \"../services/discord\";\nimport ExpanseFortune from \"./fortune/ExpanseFortune\";\nimport ExpanseFortuneMax from \"./fortune/ExpanseFortuneMax\";\nimport ExpanseStatRoll from \"./stats/ExpanseStatRoll\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  dataLocation: string;\n  data: any;\n  discordApiKey: string;\n}\n\nconst ExpanseDataForm = ({\n  onSave,\n  name,\n  dataLocation,\n  data,\n  discordApiKey\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    dataLocation: dataLocation,\n    data: data,\n    discordApiKey: discordApiKey\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <ExpanseCharacter />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseFortuneMax />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseStatRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseDrama />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseFortune />\n        </Grid>\n        <Grid item xs={12}>\n          <MaterialTable\n            actions={[\n              {\n                icon: \"send\",\n                tooltip: \"Roll\",\n                onClick: (event, rowData) => {\n                  const stunt = rowData as any;\n                  const msg = `[${stunt.type}] ${name} spends ${\n                    stunt.cost\n                  } stunt points to ${stunt.name}: ${stunt.description}.`;\n                  sendToDiscord(discordApiKey, name, msg);\n                }\n              }\n            ]}\n            columns={[\n              { title: \"Type\", field: \"type\" },\n              { title: \"Cost\", field: \"cost\", type: \"numeric\" },\n              { title: \"Name\", field: \"name\" },\n              { title: \"Description\", field: \"description\" }\n            ]}\n            data={data.stunts}\n            title=\"Stunts\"\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nExpanseDataForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  dataLocation: PropTypes.string.isRequired\n};\n\nexport default ExpanseDataForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseDataLocation } from \"../actions\";\nimport ExpanseMain from \"./ExpanseMain\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    dataLocation: state.expanse.dataLocation ? state.expanse.dataLocation : \"\",\n    data: state.expanse.data ? state.expanse.data : {},\n    discordApiKey: state.discord.apiKey ? state.discord.apiKey : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (dataLocation: any) => dispatch(setExpanseDataLocation(dataLocation))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseMain);\n","import React from \"react\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MadeWithLove from \"./components/MadeWithLove\";\nimport Dnd from \"./dnd/Dnd\";\nimport Settings from \"./settings/Settings\";\nimport Expanse from \"./expanse/Expanse\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  IconButton,\n  MenuList,\n  MenuItem,\n  Drawer\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(\n  theme =>\n    ({\n      root: {\n        display: \"flex\"\n      },\n      toolbar: {\n        paddingRight: 24 // keep right padding when drawer closed\n      },\n      toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginRight: 36\n      },\n      menuButtonHidden: {\n        display: \"none\"\n      },\n      title: {\n        flexGrow: 1\n      },\n      drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9)\n        }\n      },\n      appBarSpacer: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\"\n      },\n      container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4)\n      },\n      paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\"\n      },\n      fixedHeight: {\n        height: 240\n      }\n    } as any)\n);\n\nconst App = () => {\n  const classes: any = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router basename=\"/rpg\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              RPG Discord Tools\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <MenuList>\n            <Link to=\"/\" style={{ textDecoration: \"none\" }} key=\"expanse\">\n              <MenuItem>\n                <ListItemIcon>\n                  <Brightness5Icon />\n                </ListItemIcon>\n                <ListItemText primary=\"Expanse\" />\n              </MenuItem>\n            </Link>\n            <Link to=\"/dnd\" style={{ textDecoration: \"none\" }} key=\"dnd\">\n              <MenuItem>\n                <ListItemIcon>\n                  <GavelIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"DND\" />\n              </MenuItem>\n            </Link>\n            <Link\n              to=\"/settings\"\n              style={{ textDecoration: \"none\" }}\n              key=\"settings\"\n            >\n              <MenuItem>\n                <ListItemIcon>\n                  <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Settings\" />\n              </MenuItem>\n            </Link>\n          </MenuList>\n          {/* <List>\n          <ListItem button component={RouterLink} to=\"/\">\n            <ListItemIcon>\n              <Brightness5Icon />\n            </ListItemIcon>\n            <ListItemText primary=\"Expanse\" />\n          </ListItem>\n          <ListItem button component={RouterLink} to=\"/dnd\">\n            <ListItemIcon>\n              <GavelIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"DND\" />\n          </ListItem>\n          <ListItem button component={RouterLink} to=\"/settings\">\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List> */}\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Switch>\n              <Route exact path=\"/\" component={Expanse} />\n              <Route exact path=\"/dnd\" component={Dnd} />\n              <Route exact path=\"/expanse\" component={Expanse} />\n              <Route exact path=\"/settings\" component={Settings} />\n            </Switch>\n          </Container>\n        </main>\n        <footer>\n          <MadeWithLove />\n        </footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { loadState, saveState } from \"./services/localStorage\";\nimport { throttle } from \"lodash\";\nimport thunk from \"redux-thunk\";\n\nconst persistedState = loadState();\nlet store: any;\nif (persistedState) {\n  store = createStore(rootReducer, persistedState, applyMiddleware(thunk));\n} else {\n  store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      ...store.getState()\n    });\n  }, 1000)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store;\n","const rolls = (state = [], action: any) => {\n  switch (action.type) {\n    case \"ADD_ROLL\":\n      return [\n        ...state,\n        {\n          id:\n            state.length === 0\n              ? 0\n              : Math.max(\n                  ...state.map((val: any) => {\n                    console.log(val);\n                    return val.id;\n                  })\n                ) + 1,\n          name: action.name,\n          roll: action.roll,\n          description: action.description,\n          character: action.character\n        }\n      ];\n    case \"SEND_ROLL\":\n      return state;\n\n    case \"REMOVE_ROLL\":\n      const newState = Object.assign([], state);\n      newState.splice(\n        newState.findIndex((val: any) => val.id === action.id),\n        1\n      );\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default rolls;\n","const discord = (state = {}, action: any) => {\n  switch (action.type) {\n    case \"SET_DISCORD\":\n      return {\n        apiKey: action.apiKey\n      };\n    default:\n      return state;\n  }\n};\n\nexport default discord;\n","const expanse = (state = {}, action: any) => {\n  switch (action.type) {\n    case \"SET_EXPANSE_CHARACTER\":\n      return {\n        ...state,\n        name: action.character.name,\n        accuracy: action.character.accuracy,\n        communication: action.character.communication,\n        constitution: action.character.constitution,\n        dexterity: action.character.dexterity,\n        fighting: action.character.fighting,\n        intelligence: action.character.intelligence,\n        perception: action.character.perception,\n        strength: action.character.strength,\n        willpower: action.character.willpower\n      };\n    case \"SET_EXPANSE_MAX_FORTUNE\":\n      if ((state as any).maxFortune !== action.maxFortune) {\n        return {\n          ...state,\n          maxFortune: action.maxFortune,\n          currentFortune: action.maxFortune\n        };\n      } else {\n        return {\n          ...state\n        };\n      }\n    case \"SET_EXPANSE_CURRENT_FORTUNE\":\n      return {\n        ...state,\n        currentFortune: action.currentFortune\n      };\n    case \"SET_EXPANSE_ROLL\":\n      return {\n        ...state,\n        roll: action.roll,\n        dice: action.dice,\n        modifier: action.modifier,\n        target: action.target,\n        sp: action.sp,\n        description: action.description\n      };\n    case \"SET_EXPANSE_FORTUNE_SPENT\":\n      return {\n        ...state,\n        roll: action.roll,\n        dice: action.dice,\n        sp: action.sp,\n        currentFortune: action.currentFortune\n      };\n    case \"SET_EXPANSE_DATA_LOCATION\":\n      return {\n        ...state,\n        dataLocation: action.dataLocation\n      };\n    case \"SET_EXPANSE_DATA\":\n      return {\n        ...state,\n        dataLocation: action.dataLocation,\n        data: action.data\n      };\n    default:\n      return state;\n  }\n};\n\nexport default expanse;\n","import { combineReducers } from \"redux\";\nimport rolls from \"./rolls\";\nimport discord from \"./discord\";\nimport expanse from \"./expanse\";\n\nexport default combineReducers({\n  rolls: rolls as any,\n  discord,\n  expanse\n});\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n"],"sourceRoot":""}