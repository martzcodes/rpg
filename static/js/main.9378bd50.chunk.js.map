{"version":3,"sources":["components/MadeWithLove.tsx","services/discord.ts","actions/index.ts","services/expanse.ts","containers/AddRoll.tsx","components/Roll.tsx","components/RollList.tsx","containers/VisibleRollList.tsx","components/ManualRoll.tsx","dnd/Dnd.tsx","components/DiscordKeyForm.tsx","containers/DiscordKey.tsx","components/ExpanseDataForm.tsx","containers/ExpanseData.tsx","settings/Settings.tsx","expanse/character/ExpanseCharacterForm.tsx","expanse/character/ExpanseCharacter.tsx","expanse/drama/ExpanseDramaForm.tsx","expanse/drama/ExpanseDrama.tsx","expanse/ExpanseMain.tsx","expanse/Expanse.tsx","App.tsx","serviceWorker.ts","index.tsx","reducers/rolls.ts","reducers/discord.ts","reducers/expanse.ts","reducers/index.ts","services/localStorage.ts"],"names":["MadeWithLove","react_default","a","createElement","Typography","variant","color","align","role","aria-label","Link","href","sendToDiscord","apiKey","username","message","payload","JSON","stringify","content","params","headers","Content-Type","method","body","console","log","fetch","setExpanseDataLocation","dataLocation","dispatch","then","value","json","retrieveExpanseData","data","setExpanseData","type","useStyles","makeStyles","theme","createStyles","container","textField","marginLeft","spacing","marginRight","width","description","dense","marginTop","menu","card","connect","_ref","classes","_React$useState","React","useState","name","character","roll","_React$useState2","Object","slicedToArray","values","setValues","handleChange","event","objectSpread","defineProperty","target","className","noValidate","autoComplete","onSubmit","e","preventDefault","trim","Card","CardContent","TextField","id","label","onChange","margin","CardActions","Button","size","Roll","onClick","onRemove","ListItem","button","ListItemText","primary","concat","secondary","ListItemSecondaryAction","IconButton","edge","Delete_default","RollList","rolls","sendRoll","removeRoll","List","map","components_Roll","assign","key","state","store","getState","discord","rollInd","findIndex","msg","result","Dice","renderedExpression","total","ManualRoll","Dnd","Container","maxWidth","Grid","item","xs","components_ManualRoll","containers_AddRoll","Paper","paper","VisibleRollList","DiscordKeyForm","onSave","setDiscord","ExpanseDataForm","expanse","Settings","DiscordKey","ExpanseData","ExpanseCharacterForm","maxFortune","setExpanseCharacter","ExpanseDramaForm","modifier","dice","sp","rawResults","reducedExpression","children","res","attributes","resultSet","Set","bonus","Number","parseInt","isNaN","status","sign","join","Math","abs","length","setExpanseRoll","discordApiKey","ExpanseCharacter","ExpanseDrama","material_table_dist_default","actions","icon","tooltip","rowData","stunt","cost","columns","title","field","stunts","ExpanseMain","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","App","open","setOpen","react_router_dom","basename","CssBaseline","AppBar","clsx","Toolbar","Menu_default","component","noWrap","Drawer","ChevronLeft_default","Divider","MenuList","to","style","textDecoration","MenuItem","ListItemIcon","Brightness5_default","Gavel_default","Settings_default","react_router","exact","path","Expanse","Boolean","window","location","hostname","match","arguments","undefined","action","toConsumableArray","max","apply","val","newState","splice","currentFortune","combineReducers","persistedState","serializedState","localStorage","getItem","parse","err","loadState","createStore","rootReducer","applyMiddleware","thunk","subscribe","throttle","setItem","_unused","saveState","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9378bd50.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Typography, Link } from \"@material-ui/core\";\n\nexport default function MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with \"}\n      <span role=\"img\" aria-label=\"beer\">\n        🍺\n      </span>\n      {\", \"}\n      <span role=\"img\" aria-label=\"coffee\">\n        ☕\n      </span>\n      {\", and \"}\n      <span role=\"img\" aria-label=\"love\">\n        💗\n      </span>\n      {\" by \"}\n      <Link color=\"inherit\" href=\"https://linkedin.com/in/martzcodes/\">\n        martzcodes\n      </Link>\n      {\".\"}\n    </Typography>\n  );\n}\n","export const sendToDiscord = (\n  apiKey: string,\n  username: string,\n  message: string\n) => {\n  const payload = JSON.stringify({\n    content: message,\n    username: username\n  });\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: payload\n  };\n  console.log(payload);\n  fetch(apiKey, params);\n};\n","import store from \"..\";\nimport { sendToDiscord } from \"../services/discord\";\nimport { Dice } from \"dice-typescript\";\nimport { retrieveExpanseData } from \"../services/expanse\";\n\nexport const addRoll = ({\n  name,\n  roll,\n  character,\n  description\n}: {\n  name: string;\n  roll: string;\n  character: string;\n  description: string;\n}) => ({\n  type: \"ADD_ROLL\",\n  name,\n  roll,\n  character,\n  description\n});\n\nexport const sendRoll = (id: number) => {\n  console.log(store.getState());\n  const discord: any = store.getState().discord;\n  const rollInd = (store.getState().rolls as any).findIndex(\n    (roll: any) => roll.id === id\n  );\n  if (discord.apiKey && rollInd !== -1) {\n    const roll: any = (store.getState().rolls as any)[rollInd];\n    let msg = `${roll.description}`;\n    if (roll.roll) {\n      const dice = new Dice();\n      const result = dice.roll(roll.roll);\n      msg = `${roll.description}: (${roll.roll}) ${\n        result.renderedExpression\n      } = ${result.total}`;\n    }\n    sendToDiscord(discord.apiKey, roll.character, msg);\n  }\n  return {\n    type: \"SEND_ROLL\",\n    id\n  };\n};\n\nexport const removeRoll = (id: number) => ({\n  type: \"REMOVE_ROLL\",\n  id\n});\n\nexport const setDiscord = (apiKey: string) => ({\n  type: \"SET_DISCORD\",\n  apiKey\n});\n\nexport const setExpanseCharacter = (name: string, maxFortune: number) => ({\n  type: \"SET_EXPANSE_CHARACTER\",\n  name,\n  maxFortune\n});\n\nexport const setExpanseRoll = (\n  roll: number,\n  dice: any,\n  modifier: number,\n  target: number,\n  sp: number,\n  description: string,\n  msg: string\n) => {\n  const discord: any = store.getState().discord;\n  const expanse: any = store.getState().expanse;\n  if (discord.apiKey) {\n    sendToDiscord(discord.apiKey, expanse.name, msg);\n  }\n  return {\n    type: \"SET_EXPANSE_ROLL\",\n    roll,\n    dice,\n    modifier,\n    target,\n    sp,\n    description\n  };\n};\n\nexport const setExpanseDataLocation = (dataLocation: string) => {\n  return function(dispatch: any) {\n    return retrieveExpanseData(dataLocation).then((data: any) => {\n      dispatch(setExpanseData(dataLocation, data));\n    });\n  };\n};\n\nexport const setExpanseData = (dataLocation: string, data: any) => ({\n  type: \"SET_EXPANSE_DATA\",\n  dataLocation,\n  data\n});\n","export const retrieveExpanseData = (dataLocation: string) => {\n  return fetch(dataLocation).then((value: any) => value.json());\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRoll } from \"../actions\";\nimport {\n  Theme,\n  makeStyles,\n  createStyles,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  character: string;\n  description: string;\n  roll: string;\n}\n\nconst AddRoll = ({ dispatch }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: \"\",\n    character: \"\",\n    description: \"\",\n    roll: \"\"\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const sendRoll = (e: any) => {\n    e.preventDefault();\n    if (!values.name.trim()) {\n      return;\n    }\n    dispatch(\n      addRoll({\n        name: values.name.trim(),\n        roll: values.roll.trim(),\n        character: values.character.trim(),\n        description: values.description.trim()\n      })\n    );\n    setValues({ ...values, name: \"\", description: \"\", roll: \"\" });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={sendRoll}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"name\"\n            label=\"Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"character\"\n            label=\"Character\"\n            className={classes.textField}\n            value={values.character}\n            onChange={handleChange(\"character\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"roll\"\n            label=\"Roll\"\n            className={classes.textField}\n            value={values.roll}\n            onChange={handleChange(\"roll\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            className={classes.description}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Add Roll\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nexport default connect()(AddRoll);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst Roll = ({\n  onClick,\n  name,\n  roll,\n  character,\n  description,\n  onRemove\n}: any) => (\n  <ListItem button onClick={onClick}>\n    <ListItemText\n      primary={`${name}: ${roll}`}\n      secondary={`${character}: ${description}`}\n    />\n    <ListItemSecondaryAction>\n      <IconButton edge=\"end\" aria-label=\"Delete\" onClick={onRemove}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nRoll.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  roll: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired\n};\n\nexport default Roll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Roll from \"./Roll\";\nimport { List } from \"@material-ui/core\";\n\nconst RollList = ({ rolls, sendRoll, removeRoll }: any) => {\n  console.log(rolls);\n  return (\n    <List>\n      {rolls.map((roll: any) => (\n        <Roll\n          key={roll.id}\n          {...roll}\n          onClick={() => sendRoll(roll.id)}\n          onRemove={() => removeRoll(roll.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nRollList.propTypes = {\n  rolls: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      roll: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  sendRoll: PropTypes.func.isRequired,\n  removeRoll: PropTypes.func.isRequired\n};\n\nexport default RollList;\n","import { connect } from \"react-redux\";\nimport { sendRoll, removeRoll } from \"../actions\";\nimport RollList from \"../components/RollList\";\n\nconst getVisibleRolls = (rolls: any) => {\n  return rolls;\n};\n\nconst mapStateToProps = (state: any) => ({\n  rolls: getVisibleRolls(state.rolls)\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  sendRoll: (id: any) => dispatch(sendRoll(id)),\n  removeRoll: (id: any) => dispatch(removeRoll(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RollList);\n","import React from \"react\";\nimport {\n  Theme,\n  makeStyles,\n  createStyles,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\nimport store from \"..\";\nimport { Dice } from \"dice-typescript\";\nimport { sendToDiscord } from \"../services/discord\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  target: string;\n  character: string;\n  description: string;\n  roll: string;\n}\n\nconst ManualRoll = () => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    target: \"\",\n    character: \"\",\n    description: \"\",\n    roll: \"\"\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const sendRoll = (e: any) => {\n    e.preventDefault();\n    if (!values.character.trim()) {\n      return;\n    }\n    const discord: any = store.getState().discord;\n    if (discord.apiKey) {\n      let msg = `${values.description}`;\n      if (values.roll) {\n        const dice = new Dice();\n        const result = dice.roll(values.roll);\n        msg = `${values.description}: (${values.roll}) ${\n          result.renderedExpression\n        } = ${result.total}`;\n        if (values.target.trim()) {\n          msg += ` against ${values.target.trim()}`;\n        }\n      }\n      sendToDiscord(discord.apiKey, values.character, msg);\n    }\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={sendRoll}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"character\"\n            label=\"Character\"\n            className={classes.textField}\n            value={values.character}\n            onChange={handleChange(\"character\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"roll\"\n            label=\"Roll\"\n            className={classes.textField}\n            value={values.roll}\n            onChange={handleChange(\"roll\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            className={classes.description}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"target\"\n            label=\"Target\"\n            className={classes.textField}\n            value={values.target}\n            onChange={handleChange(\"target\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Send to Discord\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nexport default ManualRoll;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddRoll from \"../containers/AddRoll\";\nimport VisibleRollList from \"../containers/VisibleRollList\";\nimport ManualRoll from \"../components/ManualRoll\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Dnd() {\n  const classes: any = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <ManualRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <AddRoll />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <VisibleRollList />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  apiKey: string;\n}\n\nconst DiscordKeyForm = ({ onSave, apiKey }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    apiKey: apiKey\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.apiKey);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"apiKey\"\n            label=\"Discord API Key (full URL)\"\n            className={classes.textField}\n            value={values.apiKey}\n            onChange={handleChange(\"apiKey\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nDiscordKeyForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  apiKey: PropTypes.string.isRequired\n};\n\nexport default DiscordKeyForm;\n","import { connect } from \"react-redux\";\nimport { setDiscord } from \"../actions\";\nimport DiscordKeyForm from \"../components/DiscordKeyForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    apiKey: state.discord.apiKey ? state.discord.apiKey : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (apiKey: any) => dispatch(setDiscord(apiKey))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscordKeyForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  dataLocation: string;\n}\n\nconst ExpanseDataForm = ({ onSave, dataLocation }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    dataLocation: dataLocation\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.dataLocation);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"dataLocation\"\n            label=\"Expanse Data Location (possibly a github gist)\"\n            className={classes.textField}\n            value={values.dataLocation}\n            onChange={handleChange(\"dataLocation\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseDataForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  dataLocation: PropTypes.string.isRequired\n};\n\nexport default ExpanseDataForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseDataLocation } from \"../actions\";\nimport ExpanseDataForm from \"../components/ExpanseDataForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    dataLocation: state.expanse.dataLocation ? state.expanse.dataLocation : \"\",\n    data: state.expanse.data ? state.expanse.data : {}\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (dataLocation: any) => {\n    dispatch(setExpanseDataLocation(dataLocation));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseDataForm);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DiscordKey from \"../containers/DiscordKey\";\nimport ExpanseData from \"../containers/ExpanseData\";\n\nconst useStyles = makeStyles(theme => ({} as any));\n\nexport default function Settings() {\n  const classes: any = useStyles();\n  //   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <DiscordKey />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseData />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  maxFortune: number;\n}\n\nconst ExpanseCharacterForm = ({ onSave, name, maxFortune }: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    maxFortune: maxFortune\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.name, values.maxFortune);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"name\"\n            label=\"Character Name\"\n            className={classes.textField}\n            value={values.name}\n            onChange={handleChange(\"name\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"maxFortune\"\n            label=\"Character Max Fortune\"\n            className={classes.textField}\n            value={values.maxFortune}\n            onChange={handleChange(\"maxFortune\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseCharacterForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  character: PropTypes.string.isRequired\n};\n\nexport default ExpanseCharacterForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseCharacter } from \"../../actions\";\nimport ExpanseCharacterForm from \"./ExpanseCharacterForm\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    maxFortune: state.expanse.maxFortune ? state.expanse.maxFortune : 0\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (name: string, maxFortune: number) =>\n    dispatch(setExpanseCharacter(name, maxFortune))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseCharacterForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles, TextField } from \"@material-ui/core\";\n\nimport {\n  Theme,\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    description: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  modifier: number;\n  target: number;\n  description: string;\n}\n\nconst ExpanseDramaForm = ({\n  onSave,\n  name,\n  modifier,\n  target,\n  description\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    modifier: modifier,\n    target: target,\n    description: description\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        onSave(values.name, values.modifier, values.target, values.description);\n      }}\n    >\n      <Card className={classes.card}>\n        <CardContent>\n          <TextField\n            id=\"modifier\"\n            label=\"Modifier\"\n            className={classes.textField}\n            value={values.modifier}\n            onChange={handleChange(\"modifier\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"description\"\n            label=\"Action Description\"\n            className={classes.textField}\n            value={values.description}\n            onChange={handleChange(\"description\")}\n            margin=\"normal\"\n          />\n          <TextField\n            id=\"target\"\n            label=\"Target\"\n            className={classes.textField}\n            value={values.target}\n            onChange={handleChange(\"target\")}\n            margin=\"normal\"\n          />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </CardActions>\n      </Card>\n    </form>\n  );\n};\n\nExpanseDramaForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  character: PropTypes.string.isRequired\n};\n\nexport default ExpanseDramaForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseRoll } from \"../../actions\";\nimport ExpanseDramaForm from \"./ExpanseDramaForm\";\nimport { Dice } from \"dice-typescript\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    roll: state.expanse.roll ? state.expanse.roll : 0,\n    dice: state.expanse.dice ? state.expanse.dice : [],\n    modifier: state.expanse.modifier ? state.expanse.modifier : 0,\n    target: state.expanse.target ? state.expanse.target : 0,\n    sp: state.expanse.sp ? state.expanse.sp : 0,\n    description: state.expanse.description ? state.expanse.description : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (\n    name: string,\n    modifier: number,\n    target: number,\n    description: string\n  ) => {\n    if (!name.trim()) {\n      return;\n    }\n    const dice = new Dice();\n    const result = dice.roll(\"3d6\");\n    // kinda pointless to use dice-typescript at this point...\n    const rawResults = (result.reducedExpression as any).children.map(\n      (res: any) => res.attributes.value\n    );\n    const resultSet = new Set(rawResults);\n    let bonus = Number.parseInt(`${modifier}`, 10);\n    if (isNaN(bonus)) {\n      bonus = 0;\n    }\n    let status = \"FAIL\";\n    if (result.total + bonus >= target) {\n      status = \"SUCCESS\";\n    }\n    const sign = bonus < 0 ? \" - \" : \" + \";\n    const msg = `${status} ([${rawResults.join(\", \")}]${sign}${Math.abs(\n      bonus\n    )} vs ${target}) Rolled a ${result.total + bonus}${\n      description.trim().length > 0 ? \" for \" + description.trim() : \"\"\n    }${\n      resultSet.size <= 2\n        ? \". \" + rawResults[2] + \" stunt points available\"\n        : \"\"\n    }`;\n    let sp = 0;\n    if (resultSet.size <= 2) {\n      sp = rawResults[2];\n    }\n    console.log(msg);\n\n    dispatch(\n      setExpanseRoll(\n        result.total,\n        rawResults,\n        modifier,\n        target,\n        sp,\n        description,\n        msg\n      )\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseDramaForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStyles } from \"@material-ui/core\";\n\nimport { Theme, makeStyles } from \"@material-ui/core\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialTable from \"material-table\";\nimport ExpanseCharacter from \"./character/ExpanseCharacter\";\nimport ExpanseDrama from \"./drama/ExpanseDrama\";\nimport { sendToDiscord } from \"../services/discord\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //   display: \"flex\",\n      //   flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    card: {\n      //   maxWidth: 345\n    }\n  })\n);\n\ninterface State {\n  name: string;\n  dataLocation: string;\n  data: any;\n  discordApiKey: string;\n}\n\nconst ExpanseDataForm = ({\n  onSave,\n  name,\n  dataLocation,\n  data,\n  discordApiKey\n}: any) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    name: name,\n    dataLocation: dataLocation,\n    data: data,\n    discordApiKey: discordApiKey\n  });\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(name);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <ExpanseCharacter />\n        </Grid>\n        <Grid item xs={12}>\n          <ExpanseDrama />\n        </Grid>\n        {/* <Grid item xs={12}>\n          <ExpanseFortune />\n        </Grid> */}\n        <Grid item xs={12}>\n          <MaterialTable\n            actions={[\n              {\n                icon: \"send\",\n                tooltip: \"Roll\",\n                onClick: (event, rowData) => {\n                  const stunt = rowData as any;\n                  const msg = `[${stunt.type}] ${name} spends ${\n                    stunt.cost\n                  } stunt points to ${stunt.name}: ${stunt.description}.`;\n                  sendToDiscord(discordApiKey, name, msg);\n                }\n              }\n            ]}\n            columns={[\n              { title: \"Type\", field: \"type\" },\n              { title: \"Cost\", field: \"cost\", type: \"numeric\" },\n              { title: \"Name\", field: \"name\" },\n              { title: \"Description\", field: \"description\" }\n            ]}\n            data={data.stunts}\n            title=\"Stunts\"\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nExpanseDataForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  dataLocation: PropTypes.string.isRequired\n};\n\nexport default ExpanseDataForm;\n","import { connect } from \"react-redux\";\nimport { setExpanseDataLocation } from \"../actions\";\nimport ExpanseMain from \"./ExpanseMain\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    name: state.expanse.name ? state.expanse.name : \"\",\n    dataLocation: state.expanse.dataLocation ? state.expanse.dataLocation : \"\",\n    data: state.expanse.data ? state.expanse.data : {},\n    discordApiKey: state.discord.apiKey ? state.discord.apiKey : \"\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onSave: (dataLocation: any) => dispatch(setExpanseDataLocation(dataLocation))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpanseMain);\n","import React from \"react\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MadeWithLove from \"./components/MadeWithLove\";\nimport Dnd from \"./dnd/Dnd\";\nimport Settings from \"./settings/Settings\";\nimport Expanse from \"./expanse/Expanse\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  IconButton,\n  MenuList,\n  MenuItem,\n  Drawer\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(\n  theme =>\n    ({\n      root: {\n        display: \"flex\"\n      },\n      toolbar: {\n        paddingRight: 24 // keep right padding when drawer closed\n      },\n      toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginRight: 36\n      },\n      menuButtonHidden: {\n        display: \"none\"\n      },\n      title: {\n        flexGrow: 1\n      },\n      drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9)\n        }\n      },\n      appBarSpacer: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\"\n      },\n      container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4)\n      },\n      paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\"\n      },\n      fixedHeight: {\n        height: 240\n      }\n    } as any)\n);\n\nconst App = () => {\n  const classes: any = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router basename=\"/rpg\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              RPG Discord Tools\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <MenuList>\n            <Link to=\"/\" style={{ textDecoration: \"none\" }} key=\"expanse\">\n              <MenuItem>\n                <ListItemIcon>\n                  <Brightness5Icon />\n                </ListItemIcon>\n                <ListItemText primary=\"Expanse\" />\n              </MenuItem>\n            </Link>\n            <Link to=\"/dnd\" style={{ textDecoration: \"none\" }} key=\"dnd\">\n              <MenuItem>\n                <ListItemIcon>\n                  <GavelIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"DND\" />\n              </MenuItem>\n            </Link>\n            <Link\n              to=\"/settings\"\n              style={{ textDecoration: \"none\" }}\n              key=\"settings\"\n            >\n              <MenuItem>\n                <ListItemIcon>\n                  <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Settings\" />\n              </MenuItem>\n            </Link>\n          </MenuList>\n          {/* <List>\n          <ListItem button component={RouterLink} to=\"/\">\n            <ListItemIcon>\n              <Brightness5Icon />\n            </ListItemIcon>\n            <ListItemText primary=\"Expanse\" />\n          </ListItem>\n          <ListItem button component={RouterLink} to=\"/dnd\">\n            <ListItemIcon>\n              <GavelIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"DND\" />\n          </ListItem>\n          <ListItem button component={RouterLink} to=\"/settings\">\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </List> */}\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Switch>\n              <Route exact path=\"/\" component={Expanse} />\n              <Route exact path=\"/dnd\" component={Dnd} />\n              <Route exact path=\"/expanse\" component={Expanse} />\n              <Route exact path=\"/settings\" component={Settings} />\n            </Switch>\n          </Container>\n        </main>\n        <footer>\n          <MadeWithLove />\n        </footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { loadState, saveState } from \"./services/localStorage\";\nimport { throttle } from \"lodash\";\nimport thunk from \"redux-thunk\";\n\nconst persistedState = loadState();\nlet store: any;\nif (persistedState) {\n  store = createStore(rootReducer, persistedState, applyMiddleware(thunk));\n} else {\n  store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      ...store.getState()\n    });\n  }, 1000)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store;\n","const rolls = (state = [], action: any) => {\n  switch (action.type) {\n    case \"ADD_ROLL\":\n      return [\n        ...state,\n        {\n          id:\n            state.length === 0\n              ? 0\n              : Math.max(\n                  ...state.map((val: any) => {\n                    console.log(val);\n                    return val.id;\n                  })\n                ) + 1,\n          name: action.name,\n          roll: action.roll,\n          description: action.description,\n          character: action.character\n        }\n      ];\n    case \"SEND_ROLL\":\n      return state;\n\n    case \"REMOVE_ROLL\":\n      const newState = Object.assign([], state);\n      newState.splice(\n        newState.findIndex((val: any) => val.id === action.id),\n        1\n      );\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default rolls;\n","const discord = (state = {}, action: any) => {\n  switch (action.type) {\n    case \"SET_DISCORD\":\n      return {\n        apiKey: action.apiKey\n      };\n    default:\n      return state;\n  }\n};\n\nexport default discord;\n","const expanse = (state = {}, action: any) => {\n  switch (action.type) {\n    case \"SET_EXPANSE_CHARACTER\":\n      console.log(action);\n      return {\n        ...state,\n        name: action.name,\n        maxFortune: action.maxFortune\n      };\n    case \"SET_EXPANSE_ROLL\":\n      return {\n        ...state,\n        roll: action.roll,\n        dice: action.dice,\n        modifier: action.modifier,\n        target: action.target,\n        sp: action.sp,\n        description: action.description\n      };\n    case \"SET_EXPANSE_CURRENT_FORTUNE\":\n      return {\n        ...state,\n        currentFortune: action.currentFortune\n      };\n    case \"SET_EXPANSE_DATA_LOCATION\":\n      return {\n        ...state,\n        dataLocation: action.dataLocation\n      };\n    case \"SET_EXPANSE_DATA\":\n      return {\n        ...state,\n        dataLocation: action.dataLocation,\n        data: action.data\n      };\n    default:\n      return state;\n  }\n};\n\nexport default expanse;\n","import { combineReducers } from \"redux\";\nimport rolls from \"./rolls\";\nimport discord from \"./discord\";\nimport expanse from \"./expanse\";\n\nexport default combineReducers({\n  rolls: rolls as any,\n  discord,\n  expanse\n});\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n"],"sourceRoot":""}